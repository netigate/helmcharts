apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    team: {{ .Values.team }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        team: {{ .Values.team }}
    spec:
      serviceAccountName: {{ .Values.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image }}:{{ .Values.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            {{- if .Values.vault.enabled }}
            {{- range .Values.vault.env }}
            - name: {{ .key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.name }}-secret
                  key: {{ .key }}
            {{- end }}
            {{- end }}
          volumeMounts:
          - name: config
            mountPath: /tmp/appconfig/
            readOnly: true
          - name: secrets-mount
            mountPath: /mnt/dummy
            readOnly: true
          - name: namespace-config
            mountPath: /tmp/nsconfig/
            readOnly: true
          envFrom:
            {{- if and .Values.enabled .Values.vault.enabled  }}
            - secretRef:
                name: {{ .Values.name }}-secret
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- if .Values.vault.enabled }}
      - name: secrets-mount
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "{{ .Values.name }}-secret"
      {{- end }}
      - configMap:
          defaultMode: 420
          name: {{ .Values.name }}-config
        name: config
      - configMap:
          defaultMode: 420
          name: namespace-config
        name: namespace-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-web
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}-web
    team: {{ .Values.team }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}-web
  template:
    metadata:
      labels:
        app: {{ .Values.name }}-web
        team: {{ .Values.team }}
    spec:
      serviceAccountName: {{ .Values.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.name }}-web
          ports:
            - name: http
              containerPort: {{ .Values.onlycertsWeb.port }}
              protocol: TCP
          image: "{{ .Values.onlycertsWeb.image }}:{{ .Values.onlycertsWeb.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            {{- if .Values.vault.enabled }}
            {{- range .Values.vault.env }}
            - name: {{ .key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.name }}-secret
                  key: {{ .key }}
            {{- end }}
            {{- end }}
          envFrom:
            {{- if and .Values.enabled .Values.vault.enabled  }}
            - secretRef:
                name: {{ .Values.name }}-secret
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
