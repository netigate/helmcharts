{{ if $.Values.Deployment.create }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
  labels:
    app: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.Deployment.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      nodeSelector:
        {{- with .Values.Deployment.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        {{- range .Values.Deployment.containers }}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: secrets-mount
              mountPath: /mnt/secrets-store
              readOnly: true
          resources:
            {{- with .resources }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            {{- with .ports }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            {{- $env_data := dict "SPC" .SecretProviderClass.azure "containerName" .name "appName" $.Values.app.name -}}
            {{- include "mychart.secretRefs" $env_data | nindent 12 }}
        {{- end }}
      volumes:
        {{- range .Values.Deployment.containers }}
        - name: secrets-mount
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .name }}-secrets
        {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
{{- end }}
